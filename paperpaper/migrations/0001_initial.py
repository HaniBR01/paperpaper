# Generated by Django 5.2.5 on 2025-10-03 14:55

import django.db.models.deletion
import paperpaper.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Nome Completo')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Ano')),
                ('location', models.CharField(max_length=200, verbose_name='Local')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Edição',
                'verbose_name_plural': 'Edições',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome do Evento')),
                ('acronym', models.CharField(max_length=20, unique=True, verbose_name='Sigla')),
                ('promoting_entity', models.CharField(max_length=200, verbose_name='Entidade Promotora')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BibtexImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bibtex_file', models.FileField(upload_to='imports/bibtex/')),
                ('zip_file', models.FileField(blank=True, null=True, upload_to='imports/pdfs/')),
                ('total_entries', models.PositiveIntegerField(default=0)),
                ('successful_imports', models.PositiveIntegerField(default=0)),
                ('failed_imports', models.PositiveIntegerField(default=0)),
                ('import_log', models.TextField(blank=True, verbose_name='Log de Importação')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Importação BibTeX',
                'verbose_name_plural': 'Importações BibTeX',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Título')),
                ('start_page', models.PositiveIntegerField(blank=True, null=True, verbose_name='Página Inicial')),
                ('end_page', models.PositiveIntegerField(blank=True, null=True, verbose_name='Página Final')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to=paperpaper.models.article_pdf_upload_path, verbose_name='Arquivo PDF')),
                ('bibtex_key', models.CharField(blank=True, max_length=100, verbose_name='Chave BibTeX')),
                ('slug', models.SlugField(blank=True, max_length=600)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('authors', models.ManyToManyField(related_name='articles', to='paperpaper.author', verbose_name='Autores')),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='paperpaper.edition')),
            ],
            options={
                'verbose_name': 'Artigo',
                'verbose_name_plural': 'Artigos',
                'ordering': ['-edition__year', 'title'],
            },
        ),
        migrations.AddField(
            model_name='edition',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='paperpaper.event'),
        ),
        migrations.CreateModel(
            name='NotificationSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Nome Completo')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Inscrição de Notificação',
                'verbose_name_plural': 'Inscrições de Notificação',
                'unique_together': {('full_name', 'email')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='edition',
            unique_together={('event', 'year')},
        ),
    ]
